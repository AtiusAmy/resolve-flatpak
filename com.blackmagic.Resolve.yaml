####
# Flatpak Configuration for building DaVinci Resolve
#
# By default, the script in here will download the latest version of DaVinci Resolve Studio.
# You can download/install DaVinci Resolve, or DaVinci Resolve Studio.
#
# To change it, change the _product tag in the shell script below.
#
# You can also install a specific DaVinci type and version from a specific downloadId.
# To do so, set the _downloadId variable in the shell script below.
#
# Use the following to get a full list of download IDs from Blackmagic:
#curl -o- https://www.blackmagicdesign.com/api/support/nz/downloads.json | jq -r '.downloads[] | select(.urls["Linux"] != null) | select(.urls["Linux"][0]["product"] == "davinci-resolve-studio") | [.urls["Linux"][0].downloadTitle, .urls["Linux"][0].downloadId] | @tsv'
# or:
#curl -o- https://www.blackmagicdesign.com/api/support/nz/downloads.json | jq -r '.downloads[] | select(.urls["Linux"] != null) | select(.urls["Linux"][0]["product"] == "davinci-resolve") | [.urls["Linux"][0].downloadTitle, .urls["Linux"][0].downloadId] | @tsv'
#DaVinci Resolve 18.1.4	6449dc76e0b845bcb7399964b00a3ec4
#DaVinci Resolve 18.1.3	44be7e694b4e440db5d2f70ad732d3b2
#DaVinci Resolve 18.1.2	4755b7bd2d924c0db1980824edb84a20
#DaVinci Resolve 18.1.1	e09749f2de1d4c20a2b707c405d243fd
####
app-id: com.blackmagic.Resolve
runtime: org.freedesktop.Platform
runtime-version: &runtime-version '22.08'
sdk: org.freedesktop.Sdk
finish-args:
  - --share=ipc
  - --share=network
  - --socket=pulseaudio
  - --socket=x11
  - --socket=wayland
  - --device=dri
  - --filesystem=xdg-documents
  - --filesystem=xdg-cache
  - --filesystem=xdg-data
  - --filesystem=xdg-videos
  - --filesystem=~/.local/share/DaVinciResolve
#  - --env=BMD_RESOLVE_CONFIG_DIR=$XDG_CONFIG_HOME
#  - --env=BMD_RESOLVE_LOGS_DIR=$XDG_DATA_HOME/logs

command: /app/bin/resolve
modules:
  - shared-modules/glu/glu-9.json
  - name: resolve
    buildsystem: simple
    build-options:
      build-args:
        - --share=network
    build-commands:
      - |
        ./DaVinci_Resolve_*_Linux.run --appimage-extract 2>&1
        find squashfs-root -exec chmod a+r {} \;
        find squashfs-root -type d -exec chmod a+x {} \;

        # Create directories
        mkdir -p /app/easyDCP /app/scripts /app/.license /app/share /app/Fairlight /app/share/applications /app/share/icons/hicolor/128x128/apps /app/share/icons/hicolor/256x256/apps
        chmod 755 /app/easyDCP /app/scripts /app/.license /app/share /app/Fairlight /app/share/applications /app/share/icons/hicolor/128x128/apps /app/share/icons/hicolor/256x256/apps

        # Copy objects
        cp -rp squashfs-root/bin /app/
        cp -rp squashfs-root/Control /app/
        cp -rp squashfs-root/Certificates /app/
        cp -rp squashfs-root/DaVinci\ Control\ Panels\ Setup /app/
        cp -rp squashfs-root/Developer /app/
        cp -rp squashfs-root/docs /app/
        cp -rp squashfs-root/Fairlight\ Studio\ Utility /app/
        cp -rp squashfs-root/Fusion /app/
        cp -rp squashfs-root/graphics /app/

        cp -rp squashfs-root/libs /app/
        # Can we use system Qt5? Not yet.
        # rsync -avpr --exclude 'libQt5*' squashfs-root/libs /app/

        cp -rp squashfs-root/LUT /app/
        cp -rp squashfs-root/Onboarding /app/
        cp -rp squashfs-root/plugins /app/
        cp -rp squashfs-root/Technical\ Documentation /app/
        cp -rp squashfs-root/UI_Resource /app/
        cp -rp squashfs-root/scripts/script.checkfirmware /app/scripts/
        cp -rp squashfs-root/scripts/script.getlogs.v4 /app/scripts/
        cp -rp squashfs-root/scripts/script.start /app/scripts/
        cp -rp squashfs-root/share/default-config.dat /app/share/
        cp -rp squashfs-root/share/default_cm_config.bin /app/share/
        cp -rp squashfs-root/share/log-conf.xml /app/share/
        if [[ -e squashfs-root/share/remote-monitoring-log-conf.xml ]]; then
            cp -rp squashfs-root/share/remote-monitoring-log-conf.xml /app/share/
        fi

        mkdir -p /app/var/BlackmagicDesign/DaVinci\ Resolve
        chmod 755 /app/var/BlackmagicDesign/DaVinci\ Resolve

        if [[ -e squashfs-root/BlackmagicRAWPlayer ]]; then
            echo "Adding BlackmagicRAWPlayer"

            cp -rp squashfs-root/BlackmagicRAWPlayer /app
            cp com.blackmagic.Resolve.RAWPlayer.desktop /app/share/applications/com.blackmagic.Resolve.RAWPlayer.desktop
            cp squashfs-root/graphics/blackmagicraw-player_256x256_apps.png /app/share/icons/hicolor/256x256/apps/com.blackmagic.Resolve.RAWPlayer.png
        fi
        if [[ -e squashfs-root/BlackmagicRAWSpeedTest ]]; then
            echo "Adding BlackmagicRAWSpeedTest"

            cp -rp squashfs-root/BlackmagicRAWSpeedTest /app
            cp com.blackmagic.Resolve.RAWSpeedTest.desktop /app/share/applications/com.blackmagic.Resolve.RAWSpeedTest.desktop
            cp squashfs-root/graphics/blackmagicraw-speedtest_256x256_apps.png /app/share/icons/hicolor/256x256/apps/com.blackmagic.Resolve.RAWSpeedTest.png
        fi

        # Create udev rules
        #mkdir -p /app/lib/udev/rules.d
        #chmod 755 /app/lib/udev/rules.d
        #cat > /app/lib/udev/rules.d/75-davincipanel.rules <<EOF
        #SUBSYSTEM=="usb", ATTRS{idVendor}=="1edb", MODE="0666"
        #EOF
        #cat > /app/lib/udev/rules.d/75-davincikb.rules <<EOF
        #SUBSYSTEMS=="usb", ENV{.LOCAL_ifNum}="\$attr{bInterfaceNumber}"
        # Editor Keyboard
        #SUBSYSTEM=="hidraw", KERNEL=="hidraw*", ATTRS{idVendor}=="1edb", ATTRS{idProduct}=="da0b", ENV{.LOCAL_ifNum}=="04", MODE="0666"
        # Speed Editor Keyboard
        #SUBSYSTEM=="hidraw", KERNEL=="hidraw*", ATTRS{idVendor}=="1edb", ATTRS{idProduct}=="da0e", ENV{.LOCAL_ifNum}=="02", MODE="0666"
        #EOF
        #cat > /app/lib/udev/rules.d/75-sdx.rules <<EOF
        #SUBSYSTEM=="usb", ENV{DEVTYPE}=="usb_device", ATTRS{idVendor}=="096e", MODE="0666"
        #EOF

        cp -rp com.blackmagic.Resolve.desktop /app/share/applications/com.blackmagic.Resolve.desktop
        cp -rp squashfs-root/graphics/DV_Resolve.png /app/share/icons/hicolor/128x128/apps/com.blackmagic.Resolve.png

        # if [[ -e "/app/DaVinci Resolve Panels Setup/DaVinci Resolve Panels Setup" ]]; then
        #     cp com.blackmagic.Resolve.PanelSetup.desktop /app/share/applications/com.blackmagic.Resolve.PanelSetup.desktop
        #     cp -rp squashfs-root/graphics/DV_Panels.png /app/share/icons/hicolor/128x128/apps/com.blackmagic.Resolve.PanelSetup.png
        # fi
        if [[ -e "/app/DaVinci Control Panels Setup/DaVinci Control Panels Setup" ]]; then
            cp com.blackmagic.Resolve.PanelSetup.desktop /app/share/applications/com.blackmagic.Resolve.PanelSetup.desktop
            cp -rp squashfs-root/graphics/DV_Panels.png /app/share/icons/hicolor/128x128/apps/com.blackmagic.Resolve.PanelSetup.png
        fi
        if [[ -e "/app/bin/DaVinci Remote Monitoring" ]]; then
            cp com.blackmagic.Resolve.RemoteMonitoring.desktop /app/share/applications/com.blackmagic.Resolve.RemoteMonitoring.desktop
            cp -rp squashfs-root/graphics/Remote_Monitoring.png /app/share/icons/hicolor/128x128/apps/com.blackmagic.Resolve.RemoteMonitoring.png
        fi
    sources:
      - type: file
        path: com.blackmagic.Resolve.desktop
      - type: file
        path: com.blackmagic.Resolve.PanelSetup.desktop
      - type: file
        path: com.blackmagic.Resolve.RAWPlayer.desktop
      - type: file
        path: com.blackmagic.Resolve.RAWSpeedTest.desktop
      - type: file
        path: com.blackmagic.Resolve.RemoteMonitoring.desktop
      - type: shell
        commands:
          - |
            _product="davinci-resolve-studio"
            # _product="davinci-resolve"

            _useragent="User-Agent: Mozilla/5.0 (X11; Linux ${CARCH}) \
                        AppleWebKit/537.36 (KHTML, like Gecko) \
                        Chrome/77.0.3865.75 \
                        Safari/537.36"


            _useragent="$(printf '%s' "$_useragent" | sed 's/[[:space:]]\+/ /g')"
            _referid='77ef91f67a9e411bbbe299e595b4cfcc'

            # The following will find the latest version of Resolve/Resolve Studio.
            _siteurl="https://www.blackmagicdesign.com/api/support/latest-version"
            _reqjson="{ \
                \"product\": \"${_product}\", \
                \"platform\": \"linux\" \
            }"
            _reqjson="$(  printf '%s' "$_reqjson"   | sed 's/[[:space:]]\+/ /g')"
            _downloadid="$(curl \
                        -s \
                        -H 'Host: www.blackmagicdesign.com' \
                        -H 'Accept: application/json, text/plain, */*' \
                        -H 'Origin: https://www.blackmagicdesign.com' \
                        -H "$_useragent" \
                        -H 'Content-Type: application/json;charset=UTF-8' \
                        -H "Referer: https://www.blackmagicdesign.com/support/download/${_referid}/Linux" \
                        -H 'Accept-Encoding: gzip, deflate, br' \
                        -H 'Accept-Language: en-US,en;q=0.9' \
                        -H 'Authority: www.blackmagicdesign.com' \
                        -H 'Cookie: _ga=GA1.2.1849503966.1518103294; _gid=GA1.2.953840595.1518103294' \
                        --data-ascii "$_reqjson" \
                        --compressed \
                        "$_siteurl" | jq -r '.["linux"]["downloadId"]')"

            # Uncomment this to hard code the download if you want a specific version
            # _downloadid='44be7e694b4e440db5d2f70ad732d3b2'

            _reqjson="{ \
                \"firstname\": \"Flatpak\", \
                \"lastname\": \"Builder\", \
                \"email\": \"someone@flathub.org\", \
                \"phone\": \"202-555-0194\", \
                \"country\": \"us\", \
                \"state\": \"New York\", \
                \"city\": \"FPK\", \
                \"product\": \"DaVinci Resolve\" \
            }"
            _reqjson="$(  printf '%s' "$_reqjson"   | sed 's/[[:space:]]\+/ /g')"
            _siteurl="https://www.blackmagicdesign.com/api/register/us/download/${_downloadid}"
            _srcurl="$(curl \
                        -s \
                        -H 'Host: www.blackmagicdesign.com' \
                        -H 'Accept: application/json, text/plain, */*' \
                        -H 'Origin: https://www.blackmagicdesign.com' \
                        -H "$_useragent" \
                        -H 'Content-Type: application/json;charset=UTF-8' \
                        -H "Referer: https://www.blackmagicdesign.com/support/download/${_referid}/Linux" \
                        -H 'Accept-Encoding: gzip, deflate, br' \
                        -H 'Accept-Language: en-US,en;q=0.9' \
                        -H 'Authority: www.blackmagicdesign.com' \
                        -H 'Cookie: _ga=GA1.2.1849503966.1518103294; _gid=GA1.2.953840595.1518103294' \
                        --data-ascii "$_reqjson" \
                        --compressed \
                        "${_siteurl}")"

            _fname="$(curl \
                        --no-clobber \
                        -gqb '' -C - --retry 3 --retry-delay 3 \
                        -H 'Host: sw.blackmagicdesign.com' \
                        -H 'Upgrade-Insecure-Requests: 1' \
                        -H "${_useragent}" \
                        -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' \
                        -H 'Accept-Language: en-US,en;q=0.9' \
                        -w '%{filename_effective}' \
                        --compressed \
                        -O \
                        ${_srcurl})"
            unzip -x "${_fname}"
